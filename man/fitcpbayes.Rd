% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitcpbayes.R
\name{fitcpbayes}
\alias{fitcpbayes}
\title{Bayesian fit of COM-Poisson GLMs}
\usage{
fitcpbayes(
  formula_beta,
  formula_nu,
  data,
  burnin,
  niter,
  prior_mu,
  prior_nu,
  nchains,
  ncores
)
}
\arguments{
\item{formula_beta}{Object of class \code{formula}. Regression structure for \eqn{\mu}, the location parameter.}

\item{formula_nu}{Object of class \code{formula}. Regression structure for \eqn{\nu}, the dispersion parameter.}

\item{data}{Data frame containing the variables used in \code{formula_beta} and \code{formula_nu}.}

\item{burnin}{Integer. Number of iterations to discard as burn-in period.}

\item{niter}{Integer. Number of iterations to store (additional to \code{burnin}).}

\item{prior_mu}{Named list. Optional argument with \code{mean} and \code{sd} hyperparameters of Normal prior. Unless there is no regression structure, 
in which case \code{shape} =2, \code{rate} =2 is expected.}

\item{prior_nu}{Named list. Equivalent to \code{prior_mu} for the dispersion regression. See details section for more information on prior specification.}

\item{nchains}{Integer. Number of chains to run in parallel, defaults to a single chain.}

\item{ncores}{Integer. Number of cores for parallel computation.}
}
\value{
Object of class \code{cpbayes}. \code{nchains} lists, each containing the following.
\describe{
\item{\code{mu}}{(\code{niter} x \eqn{n_\mu}) matrix. Stored MCMC samples of parameters in \code{formula_beta}.}
\item{\code{nu}}{(\code{niter} x \eqn{n_\nu}) matrix. Stored MCMC samples of parameters in \code{formula_nu}.}
\item{\code{ac_rates}}{( \eqn{max( n_{\mu}, n_{\nu}) x 2}) matrix) of acceptance rates.}
\item{\code{loglik}}{(\code{niter} x \eqn{n}) or (\code{niter} x \eqn{1}) matrix.
 Log-likelihood values of response data \eqn{y_1, ... , y_n} at the MCMC iterations.   }
\item{\code{y}}{Response data.}
}
}
\description{
\code{fitcpbayes} fits generalised linear models to COM-Poisson distributed count data, supporting
regression in the location and dispersion parameters.
}
\details{
\bold{COM-Poisson regression}\cr
Assumes the COM-Poisson regression structure specified by \href{10.1214/20-BA1230}{Benson and Friel (2021)} where
\deqn{y_i ~ COM-Poisson(\mu_i, \nu_i)}  
and \eqn{\mu_i = \log( \beta_\mu  X_\mu^T)}, \eqn{\nu_i = \log( \beta_nu  X_\nu^T)}.
Covariate data is included in the model matrices \eqn{ X_\mu}, \eqn{X_\nu} parsed with \code{formula} and
\eqn{\beta_\mu = (\beta_{\mu,0},\beta_{\mu,1},..., \beta_{\mu,n_{\mu}} )}, and \eqn{\beta_nu = (\beta_{\nu,0},\beta_{\nu,1},..., \beta_{\nu,n_{\nu} } )}.

The likelihood of count observations \eqn{y_i} given \eqn{\mu_i}, \eqn{\nu_i} is then
\deqn{f(y_i|\mu_i, \nu_i) = (\mu_i^y_i/y_i!)^\nu_i 1/Z(\mu_i, \nu_i) } 
where \eqn{Z(\mu_i, \nu_i) = \sum_{y=0}^\infty (\mu_i^y_i/y_i!)^\nu_i } is an intractable normalisation constant. 

\bold{Markov Chain Monte Carlo}\cr
Sampling the posterior model parameters is done with the exchange algorithm (Murray, Ghahramani and Ghahramani (2006)),
an approach for doubly-intractable Bayesian inference that overcomes unavailability of the likelihood's normalising 
constant via introduction of auxiliary draws from the intractable distribution.

The augmented posterior model is
\deqn{\pi(\beta_\mu, \beta_\nu, \beta_\mu', \beta_\nu', y'| y) \propto f(y|\beta_\mu, \beta_\nu) f(y'|\beta_\mu', \beta_\nu')\pi(\beta_\mu)\pi(\beta_\nu)h(\beta_mu'|\beta_\mu)h(\beta_nu'|\beta_nu) } 
where \eqn{\pi(\beta_\mu) = \prod_{i=1}^{n_\mu} \pi(\beta_{\mu, i}|} \code{mean}, \code{sd}) and \eqn{\pi(\beta_\nu) = \prod_{j=1}^{n_\nu} \pi(\beta_{\nu, j}|} \code{mean}, \code{sd}) are
the prior distributions of \eqn{\beta_\mu}, \eqn{\beta_\nu} elements. \cr
The auxiliary likelihood draws \eqn{y'} are sampled using \code{\link{rcompois}} with parameters \eqn{\beta_\mu'}, \eqn{\beta_\nu'}
proposed according to \eqn{h(\beta_{mu', i}|\beta_{mu, i}) = h(\beta_{nu', j}|\beta_{nu,j})}. Specifically, \eqn{h(\beta_{\mu', i}|\beta_{\mu, i} \equiv} 
Normal(\eqn{\beta_{\mu,i}, \sigma_{\mu,i}}) for \eqn{i=1, ..., n_\mu}, and similarly \eqn{h(\beta_{\nu, j}, \beta_{\nu', j})} ~
Normal(\eqn{\beta_{\nu,j}, \sigma_{\nu, j}}) for \eqn{j=1, ..., n_\nu}. \cr


An automatic vanishing calibration of \eqn{\sigma_{\mu,i}} and \eqn{\sigma_{\nu, j}} proposal variabilities is implemented targetting 
the rule of thumb acceptance rate of 44\% to accept/reject proposed values appropriately. \cr

The prior distribution on location regressor effects are \eqn{\pi(\beta_{\mu, i}|} \code{mean}, \code{sd}) for all \eqn{i} with
the \code{mean}, \code{sd} values supplied in \code{prior_mu}. Default values are \code{mean} =0, \code{sd} =1. Equivalently
for the dispersion regression \eqn{\pi(\beta_{\nu, j}|} \code{mean}, \code{sd}) priors are Normally distributed with the \code{mean} and \code{sd}
provided in the \code{prior_nu} list, that also defaults to \code{mean} =0, \code{sd} =1. \cr

\bold{No regression case}\cr
The case of no regression, i.e, \eqn{n_\mu = n_\nu =0} is treated as a special case, avoiding the logarithm link and updating
\eqn{\mu>0} and \eqn{\nu >0} in place of \eqn{exp(\beta_{\mu,0})} and  \eqn{exp(\beta_{\nu,0})}. The same algorithmic strategy applies
with a change in the \emph{proposal and prior distributions}. Candidate \eqn{\mu}, \eqn{\nu} values are simulated from log-Normal distributions
with median given by the current parameter state and scale parameters \eqn{\sigma_\mu}, \eqn{\sigma_\nu}. That is, \eqn{h(\mu'|\mu)},\eqn{h(\nu'|\nu)}
are log-Normal(\eqn{\log(\mu), \sigma_\mu}), log-Normal(\eqn{\log(\nu), \sigma_\nu}). The change in prior specification acommodating \eqn{\mu>0} and \eqn{\nu >0} 
is to \eqn{\pi(\mu)} ~ Gamma(\code{shape}, \code{rate}) with \code{prior_mu} hyperparameters and also for \eqn{\pi(\nu)}, with \code{shape} and \code{rate} in \code{prior_nu}.
}
\examples{
\dontrun{
burnin= 10000
niter = 20000
data("inventory") ## No regression in mu or nu, single MCMC chain
mcmc_noreg =fitcpbayes(sales~1, sales~1, inventory, burnin, niter, nchains=1)

data("takeoverbids")
library(dplyr)
data=  takeoverbids \%>\% select(numbids, whtknght, size)
formula_beta = numbids ~ whtknght
formula_nu = numbids ~ size
#Parallel computation, regression on both parameters  
mcmc_reg = fitcpbayes(formula_beta, formula_nu, data, burnin, niter, nchains =3, ncores =3)
}

}
\references{
Benson, A. and Friel, N. (2021) Bayesian Inference, Model Selection and Likelihood Estimation using Fast Rejection Sampling: The Conway-Maxwell-Poisson Distribution.
Bayesian Analysis (16) 905-931.

Murray, I., Ghahramani, Z. and MacKay, D. (2006) MCMC for doubly-intractable distributions.
Proceedings of the 22nd Annual Conference on Uncertainty in Artificial Intelligence (UAI-06), AUAI Press.
}
\seealso{
summary.cpbayes, plot.cpbayes, BIC.cpbayes, rcompois
}
\author{
Luiza Piancastelli \email{luiza.piancastelli@ucdconnect.ie}
}
